name: Mediatek-UBOOT

on:
  # 自动编译：每周日早上 4 点（可启用）
  # schedule:
  #   - cron: 0 20 * * 0
  # 手动触发
  workflow_dispatch:

env:
  REPO_URL: https://github.com/1715173329/bl-mt798x-oss.git
  REPO_BRANCH: atf-2025
  TZ: Asia/Shanghai

permissions: write-all

jobs:
  prepare:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Clone source repository
        run: |
          git clone --depth=1 --branch $REPO_BRANCH $REPO_URL wrt

      - name: Generate defconfig list
        id: set-matrix
        run: |
          cd wrt
          CONFIGS=$(find uboot-mtk-*/configs -type f -name 'mt798*.defconfig' | grep -ivE 'rfb|fpga' | sed 's|.*/||')
          MATRIX=$(jq -nc --argjson list "$(echo "$CONFIGS" | jq -R -s -c 'split("\n")[:-1]')" '{"include": [ .list[] | {config: .} ]}')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    name: Build ${{ matrix.config }}
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
      fail-fast: false
      max-parallel: 8

    steps:
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu build-essential flex bison libssl-dev device-tree-compiler dos2unix

      - name: Clone source code
        run: |
          git clone --depth=1 --branch $REPO_BRANCH $REPO_URL wrt

      - name: Build U-Boot for ${{ matrix.config }}
        working-directory: wrt
        env:
          CONFIG: ${{ matrix.config }}
        run: |
          soc=${CONFIG%%_*}
          rest=${CONFIG#*_}
          board=${rest%_multi_layout}
          [[ $CONFIG == *multi_layout* ]] && MULTI="MULTI_LAYOUT=1" || MULTI=""
          mkdir -p output
          SOC=$soc BOARD=$board $MULTI ./build.sh

      - name: Rename and pack artifacts
        working-directory: wrt
        run: |
          mkdir -p upload
          for f in output/*; do
            base=$(basename "$f")
            new_name="${{ matrix.config }}_$(date +%y%m%d).$base"
            cp "$f" "upload/$new_name"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config }}
          path: wrt/upload/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Zip all artifacts
        run: |
          cd release
          zip -r ../firmware_798x_$(date +%y%m%d).zip ./*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release_798x_$(date +%Y%m%d)
          files: firmware_798x_*.zip
          body: |
            ✅ 自动构建完成！

            - 平台：MT798x
            - 源码仓库：${{ env.REPO_URL }}
            - 分支：${{ env.REPO_BRANCH }}
            - 时间：$(date "+%Y-%m-%d %H:%M")
